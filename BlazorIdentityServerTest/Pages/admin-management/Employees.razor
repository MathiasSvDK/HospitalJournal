@page "/admin/ansatte"
@inject EmployeeService _employeeService

<div class="page-body">
	<div class="container-xl">
		<div class="page-header mb-3">
			<div class="row align-items-center mw-100">
				<div class="col">
					<div class="mb-1">
						<ol class="breadcrumb" aria-label="breadcrumbs">
							<li class="breadcrumb-item"><a href="#">Administrator</a></li>
							<li class="breadcrumb-item active" aria-current="page"><a href="#">Ansatte</a></li>
						</ol>
					</div>
					<h2 class="page-title">
						<span class="text-truncate">Ansatte</span>
					</h2>
				</div>
				<div class="col-auto">
					<div class="btn-list">
						<a href="#" class="btn btn-primary">
							Tilf√∏j medarbejder
						</a>
					</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-12 col-md-4 px-4">
				<NavMenu CurrentPage="ansatte" />
			</div>
			<div class="col-12 col-md-8">
				<div class="row">
					<div class="col-12">
						<div class="row row-cards">

							@foreach (int role in EmployeeList.Select(x => x.Role).OrderBy(x => x).Distinct().ToList())
							{
								<p style="font-weight:bolder;margin-bottom:0;margin-top:10px;">@_employeeService.ConvertRole(role)</p>
								@foreach (Employee item in EmployeeList.Where(x => x.Role == role).OrderBy(x => x.Firstname))
								{
									<div class="col-md-6 col-lg-3">
										<div class="card">
											<div class="card-body p-4 text-center">
												<span class="avatar avatar-xl mb-3 avatar-rounded"
											style="background-image: url('./static/avatars/(@item.Id).jpg')"></span>
												<h3 class="m-0 mb-1">@item.Firstname @item.Lastname</h3>
												<div class="text-muted">@_employeeService.ConvertRole(item.Role)</div>
											</div>
											<div class="d-flex">
												<a href="mailto:@item.Email" class="card-btn">
													<svg xmlns="http://www.w3.org/2000/svg" class="icon me-2 text-muted"
												width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
												stroke="currentColor" fill="none" stroke-linecap="round"
												stroke-linejoin="round">
														<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
														<rect x="3" y="5" width="18" height="14" rx="2"></rect>
														<polyline points="3 7 12 13 21 7"></polyline>
													</svg>
													Email
												</a>
												<a href="tel:@item.Mobilnr" class="card-btn">
													<svg xmlns="http://www.w3.org/2000/svg" class="icon me-2 text-muted"
												width="24" height="24" viewBox="0 0 24 24" stroke-width="2"
												stroke="currentColor" fill="none" stroke-linecap="round"
												stroke-linejoin="round">
														<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
														<path
													d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2">
														</path>
													</svg>
													Ring
												</a>
											</div>
										</div>
									</div>
								}
							}


						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


@code {
	public List<Employee> EmployeeList { get; set; }
	protected override async Task OnInitializedAsync()
	{
		EmployeeList = _employeeService.GetEmployees();
	}
}