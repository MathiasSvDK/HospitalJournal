@page "/Patient/{PatientCPR:int}"
@using Microsoft.AspNetCore.Identity
@using BlazorIdentityServerTest.Data
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@inject UserManager<ApplicationUser> _UserManager
@inject JournalService _JournalService

<IsLoading Loading="@Loading"></IsLoading>


@if (Patient != null)
{
    <div class="container-xl">
        <!-- Page title -->
        <div class="page-header d-print-none">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <h2 class="page-title">
                        Journal for @Patient.Firstname @Patient.Lastname
                    </h2>
                </div>
            </div>
        </div>
    </div>
    <div class="page-body patientview">
        <div class="container-xl">
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">
                                Journal for @Patient.Firstname
                                <a class="btn btn-blue savechanges" @onclick="SaveChanges">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-check" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M5 12l5 5l10 -10"></path>
                                    </svg>
                                    Gem
                                </a>
                            </h3>
                        </div>
                        <div class="card-body">
                            <ul class="patientview-info">
                                <li>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-id" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <rect x="3" y="4" width="18" height="16" rx="3"></rect>
                                        <circle cx="9" cy="10" r="2"></circle>
                                        <line x1="15" y1="8" x2="17" y2="8"></line>
                                        <line x1="15" y1="12" x2="17" y2="12"></line>
                                        <line x1="7" y1="16" x2="17" y2="16"></line>
                                    </svg>
                                    <b>CPR:</b> @Patient.NormalizedUserName
                                </li>
                                <li>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-signature" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M3 17c3.333 -3.333 5 -6 5 -8c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 4.877 2.5 6c1.5 2 2.5 2.5 3.5 1l2 -3c.333 2.667 1.333 4 3 4c.53 0 2.639 -2 3 -2c.517 0 1.517 .667 3 2"></path>
                                    </svg>
                                    <b>Fornavn:</b> @Patient.Firstname
                                </li>
                                <li>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-signature" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M3 17c3.333 -3.333 5 -6 5 -8c0 -3 -1 -3 -2 -3s-2.032 1.085 -2 3c.034 2.048 1.658 4.877 2.5 6c1.5 2 2.5 2.5 3.5 1l2 -3c.333 2.667 1.333 4 3 4c.53 0 2.639 -2 3 -2c.517 0 1.517 .667 3 2"></path>
                                    </svg>
                                    <b>Efternavn:</b> @Patient.Lastname
                                </li>
                                <li>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-phone" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5l1.5 -2.5l5 2v4a2 2 0 0 1 -2 2a16 16 0 0 1 -15 -15a2 2 0 0 1 2 -2"></path>
                                    </svg>
                                    <b>Mobil nr:</b> @Patient.Mobilnr
                                </li>
                                <li>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-inbox" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <rect x="4" y="4" width="16" height="16" rx="2"></rect>
                                        <path d="M4 13h3l3 3h4l3 -3h3"></path>
                                    </svg>
                                    <b>Email:</b> @Patient.Email
                                </li>
                                <li>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-home-2" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                        <polyline points="5 12 3 12 12 3 21 12 19 12"></polyline>
                                        <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"></path>
                                        <rect x="10" y="12" width="4" height="4"></rect>
                                    </svg><b>Addresse:</b> @Patient.Address
                                </li>
                                <li>
                                    <p style="margin-top: 10px;margin-bottom: 5px;">
                                        <b>Note</b>
                                    </p>
                                    <textarea class="form-control" rows="5" @bind="Patient.Note"></textarea>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Journaler</h3>
                        </div>
                    </div>
                    @foreach (Journal journal in Journals)
                    {
                        ApplicationUser employee = EmployeeList.Where(x => x.NormalizedUserName.ToString() == journal.AssignedEmployee.ToString()).FirstOrDefault();
                        <div class="card p-3">
                            <div class="row">
                                <div class="col">
                                    <b>@journal.Date</b>
                                </div>
                                <div class="col">
                                    <div class="datagrid-item">
                                        <div class="datagrid-title">Oprettet af</div>
                                        <div class="datagrid-content">
                                            <div class="d-flex align-items-center">
                                                <span class="avatar avatar-xs me-2 avatar-rounded" style="background-image: url(@employee.Pfp)"></span>
                                                @employee.Firstname @employee.Lastname
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <a href="/Patient/@PatientCPR/Journal/@journal.Id" class="btn btn-flickr w-100 btn-icon" aria-label="Facebook">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                            <line x1="5" y1="12" x2="19" y2="12"></line>
                                            <line x1="13" y1="18" x2="19" y2="12"></line>
                                            <line x1="13" y1="6" x2="19" y2="12"></line>
                                        </svg>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public int PatientCPR { get; set; }

    public ApplicationUser Patient { get; set; }
    public List<Journal> Journals { get; set; }
    public List<ApplicationUser> EmployeeList { get; set; }
    public bool Loading { get; set; }


    protected override async Task OnInitializedAsync()
    {
        EmployeeList = new List<ApplicationUser>();
    }


    public async void SaveChanges()
    {
        var res = await _UserManager.UpdateAsync(Patient);
        if (res.Succeeded)
        {
            await Swal.FireAsync("Fuldført", "Patient er blevet opdateret", "success");
        }
        else
        {
            await Swal.FireAsync("Fejl", "Der skete en fejl (124)", "error");
        }
    }
    
    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Loading = true;
            StateHasChanged();
            Patient = await _UserManager.FindByNameAsync(PatientCPR.ToString());
            if (Patient == null)
            {
                await Swal.FireAsync("Fejl", "Denne patient kunne ikke findes", "error");
            }
            else
            {
                Journals = _JournalService.GetByCPR(PatientCPR);
                List<int> employees = Journals.Select(x => x.AssignedEmployee).ToList();
                foreach (int cpr in employees)
                {
                    ApplicationUser user = await _UserManager.FindByNameAsync(cpr.ToString());
                    EmployeeList.Add(user);
                }
            }
            Loading = false;
            StateHasChanged();
        }
    }

}